name: CD to Ubuntu Server #

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build with Maven
        run: mvn clean package

      - name: Copy files via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          source: "target/*.jar"
          target: "/home/${{ secrets.SSH_ID }}/"
          rm: false
          timeout: '30s'
          command_timeout: '10m'
          use_insecure_cipher: false
          debug: true

      - name: Deploy to Server
        env:
          SSH_IP: ${{ secrets.SSH_IP }}
          SSH_ID: ${{ secrets.SSH_ID }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          PORT1: ${{ secrets.FRONT_PORT_A }}
        run: |
          ssh -i ssh_key -o StrictHostKeyChecking=no ${{env.SSH_ID}}@${{env.SSH_IP}} << 'EOF'
          if pgrep -f "java -jar /home/$SSH_ID/BOOK-STORE-FRONT.jar --server.port=${{env.FRONT_PORT_A}}"; then
            pkill -f "java -jar /home/$SSH_ID/BOOK-STORE-FRONT.jar --server.port=${{env.FRONT_PORT_A}}"
          fi
          nohup java -jar /home/$SSH_ID/BOOK-STORE-FRONT.jar --server.port=${{env.FRONT_PORT_A}} > app1.log 2>&1 &
#          if pgrep -f "java -jar /home/$SSH_ID/BOOK-STORE-FRONT.jar --server.port=$FRONT_PORT_B"; then
#            pkill -f "java -jar /home/$SSH_ID/BOOK-STORE-FRONT.jar --server.port=$FRONT_PORT_B"
#          fi
#          nohup java -jar /home/$SSH_ID/BOOK-STORE-FRONT.jar --server.port=$FRONT_PORT_B > app2.log 2>&1 &


